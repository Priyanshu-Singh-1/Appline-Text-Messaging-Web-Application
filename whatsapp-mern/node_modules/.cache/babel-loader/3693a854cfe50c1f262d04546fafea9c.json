{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { getDisplayName } from '@material-ui/utils';\nexport default function mergeClasses() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var baseClasses = options.baseClasses,\n      newClasses = options.newClasses,\n      Component = options.Component;\n\n  if (!newClasses) {\n    return baseClasses;\n  }\n\n  var nextClasses = _extends({}, baseClasses);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof newClasses === 'string') {\n      console.error([\"Material-UI: The value `\".concat(newClasses, \"` \") + \"provided to the classes prop of \".concat(getDisplayName(Component), \" is incorrect.\"), 'You might want to use the className prop instead.'].join('\\n'));\n      return baseClasses;\n    }\n  }\n\n  Object.keys(newClasses).forEach(function (key) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!baseClasses[key] && newClasses[key]) {\n        console.error([\"Material-UI: The key `\".concat(key, \"` \") + \"provided to the classes prop is not implemented in \".concat(getDisplayName(Component), \".\"), \"You can only override one of the following: \".concat(Object.keys(baseClasses).join(','), \".\")].join('\\n'));\n      }\n\n      if (newClasses[key] && typeof newClasses[key] !== 'string') {\n        console.error([\"Material-UI: The key `\".concat(key, \"` \") + \"provided to the classes prop is not valid for \".concat(getDisplayName(Component), \".\"), \"You need to provide a non empty string instead of: \".concat(newClasses[key], \".\")].join('\\n'));\n      }\n    }\n\n    if (newClasses[key]) {\n      nextClasses[key] = \"\".concat(baseClasses[key], \" \").concat(newClasses[key]);\n    }\n  });\n  return nextClasses;\n}","map":{"version":3,"names":["_extends","getDisplayName","mergeClasses","options","arguments","length","undefined","baseClasses","newClasses","Component","nextClasses","process","env","NODE_ENV","console","error","concat","join","Object","keys","forEach","key"],"sources":["C:/Users/DELL/Desktop/whatsapp/node_modules/@material-ui/styles/esm/mergeClasses/mergeClasses.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { getDisplayName } from '@material-ui/utils';\nexport default function mergeClasses() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var baseClasses = options.baseClasses,\n      newClasses = options.newClasses,\n      Component = options.Component;\n\n  if (!newClasses) {\n    return baseClasses;\n  }\n\n  var nextClasses = _extends({}, baseClasses);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof newClasses === 'string') {\n      console.error([\"Material-UI: The value `\".concat(newClasses, \"` \") + \"provided to the classes prop of \".concat(getDisplayName(Component), \" is incorrect.\"), 'You might want to use the className prop instead.'].join('\\n'));\n      return baseClasses;\n    }\n  }\n\n  Object.keys(newClasses).forEach(function (key) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!baseClasses[key] && newClasses[key]) {\n        console.error([\"Material-UI: The key `\".concat(key, \"` \") + \"provided to the classes prop is not implemented in \".concat(getDisplayName(Component), \".\"), \"You can only override one of the following: \".concat(Object.keys(baseClasses).join(','), \".\")].join('\\n'));\n      }\n\n      if (newClasses[key] && typeof newClasses[key] !== 'string') {\n        console.error([\"Material-UI: The key `\".concat(key, \"` \") + \"provided to the classes prop is not valid for \".concat(getDisplayName(Component), \".\"), \"You need to provide a non empty string instead of: \".concat(newClasses[key], \".\")].join('\\n'));\n      }\n    }\n\n    if (newClasses[key]) {\n      nextClasses[key] = \"\".concat(baseClasses[key], \" \").concat(newClasses[key]);\n    }\n  });\n  return nextClasses;\n}"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,eAAe,SAASC,YAAT,GAAwB;EACrC,IAAIC,OAAO,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;EACA,IAAIG,WAAW,GAAGJ,OAAO,CAACI,WAA1B;EAAA,IACIC,UAAU,GAAGL,OAAO,CAACK,UADzB;EAAA,IAEIC,SAAS,GAAGN,OAAO,CAACM,SAFxB;;EAIA,IAAI,CAACD,UAAL,EAAiB;IACf,OAAOD,WAAP;EACD;;EAED,IAAIG,WAAW,GAAGV,QAAQ,CAAC,EAAD,EAAKO,WAAL,CAA1B;;EAEA,IAAII,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;IACzC,IAAI,OAAOL,UAAP,KAAsB,QAA1B,EAAoC;MAClCM,OAAO,CAACC,KAAR,CAAc,CAAC,2BAA2BC,MAA3B,CAAkCR,UAAlC,EAA8C,IAA9C,IAAsD,mCAAmCQ,MAAnC,CAA0Cf,cAAc,CAACQ,SAAD,CAAxD,EAAqE,gBAArE,CAAvD,EAA+I,mDAA/I,EAAoMQ,IAApM,CAAyM,IAAzM,CAAd;MACA,OAAOV,WAAP;IACD;EACF;;EAEDW,MAAM,CAACC,IAAP,CAAYX,UAAZ,EAAwBY,OAAxB,CAAgC,UAAUC,GAAV,EAAe;IAC7C,IAAIV,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;MACzC,IAAI,CAACN,WAAW,CAACc,GAAD,CAAZ,IAAqBb,UAAU,CAACa,GAAD,CAAnC,EAA0C;QACxCP,OAAO,CAACC,KAAR,CAAc,CAAC,yBAAyBC,MAAzB,CAAgCK,GAAhC,EAAqC,IAArC,IAA6C,sDAAsDL,MAAtD,CAA6Df,cAAc,CAACQ,SAAD,CAA3E,EAAwF,GAAxF,CAA9C,EAA4I,+CAA+CO,MAA/C,CAAsDE,MAAM,CAACC,IAAP,CAAYZ,WAAZ,EAAyBU,IAAzB,CAA8B,GAA9B,CAAtD,EAA0F,GAA1F,CAA5I,EAA4OA,IAA5O,CAAiP,IAAjP,CAAd;MACD;;MAED,IAAIT,UAAU,CAACa,GAAD,CAAV,IAAmB,OAAOb,UAAU,CAACa,GAAD,CAAjB,KAA2B,QAAlD,EAA4D;QAC1DP,OAAO,CAACC,KAAR,CAAc,CAAC,yBAAyBC,MAAzB,CAAgCK,GAAhC,EAAqC,IAArC,IAA6C,iDAAiDL,MAAjD,CAAwDf,cAAc,CAACQ,SAAD,CAAtE,EAAmF,GAAnF,CAA9C,EAAuI,sDAAsDO,MAAtD,CAA6DR,UAAU,CAACa,GAAD,CAAvE,EAA8E,GAA9E,CAAvI,EAA2NJ,IAA3N,CAAgO,IAAhO,CAAd;MACD;IACF;;IAED,IAAIT,UAAU,CAACa,GAAD,CAAd,EAAqB;MACnBX,WAAW,CAACW,GAAD,CAAX,GAAmB,GAAGL,MAAH,CAAUT,WAAW,CAACc,GAAD,CAArB,EAA4B,GAA5B,EAAiCL,MAAjC,CAAwCR,UAAU,CAACa,GAAD,CAAlD,CAAnB;IACD;EACF,CAdD;EAeA,OAAOX,WAAP;AACD"},"metadata":{},"sourceType":"module"}