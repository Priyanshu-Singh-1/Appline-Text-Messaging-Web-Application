{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport { getThemeProps } from '@material-ui/styles';\nimport Drawer, { getAnchor, isHorizontal } from '../Drawer/Drawer';\nimport ownerDocument from '../utils/ownerDocument';\nimport useEventCallback from '../utils/useEventCallback';\nimport { duration } from '../styles/transitions';\nimport useTheme from '../styles/useTheme';\nimport { getTransitionProps } from '../transitions/utils';\nimport NoSsr from '../NoSsr';\nimport SwipeArea from './SwipeArea'; // This value is closed to what browsers are using internally to\n// trigger a native scroll.\n\nvar UNCERTAINTY_THRESHOLD = 3; // px\n// We can only have one node at the time claiming ownership for handling the swipe.\n// Otherwise, the UX would be confusing.\n// That's why we use a singleton here.\n\nvar nodeThatClaimedTheSwipe = null; // Exported for test purposes.\n\nexport function reset() {\n  nodeThatClaimedTheSwipe = null;\n}\n\nfunction calculateCurrentX(anchor, touches) {\n  return anchor === 'right' ? document.body.offsetWidth - touches[0].pageX : touches[0].pageX;\n}\n\nfunction calculateCurrentY(anchor, touches) {\n  return anchor === 'bottom' ? window.innerHeight - touches[0].clientY : touches[0].clientY;\n}\n\nfunction getMaxTranslate(horizontalSwipe, paperInstance) {\n  return horizontalSwipe ? paperInstance.clientWidth : paperInstance.clientHeight;\n}\n\nfunction getTranslate(currentTranslate, startLocation, open, maxTranslate) {\n  return Math.min(Math.max(open ? startLocation - currentTranslate : maxTranslate + startLocation - currentTranslate, 0), maxTranslate);\n}\n\nfunction getDomTreeShapes(element, rootNode) {\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L129\n  var domTreeShapes = [];\n\n  while (element && element !== rootNode) {\n    var style = window.getComputedStyle(element);\n\n    if ( // Ignore the scroll children if the element is absolute positioned.\n    style.getPropertyValue('position') === 'absolute' || // Ignore the scroll children if the element has an overflowX hidden\n    style.getPropertyValue('overflow-x') === 'hidden') {\n      domTreeShapes = [];\n    } else if (element.clientWidth > 0 && element.scrollWidth > element.clientWidth || element.clientHeight > 0 && element.scrollHeight > element.clientHeight) {\n      // Ignore the nodes that have no width.\n      // Keep elements with a scroll\n      domTreeShapes.push(element);\n    }\n\n    element = element.parentElement;\n  }\n\n  return domTreeShapes;\n}\n\nfunction findNativeHandler(_ref) {\n  var domTreeShapes = _ref.domTreeShapes,\n      start = _ref.start,\n      current = _ref.current,\n      anchor = _ref.anchor; // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L175\n\n  var axisProperties = {\n    scrollPosition: {\n      x: 'scrollLeft',\n      y: 'scrollTop'\n    },\n    scrollLength: {\n      x: 'scrollWidth',\n      y: 'scrollHeight'\n    },\n    clientLength: {\n      x: 'clientWidth',\n      y: 'clientHeight'\n    }\n  };\n  return domTreeShapes.some(function (shape) {\n    // Determine if we are going backward or forward.\n    var goingForward = current >= start;\n\n    if (anchor === 'top' || anchor === 'left') {\n      goingForward = !goingForward;\n    }\n\n    var axis = anchor === 'left' || anchor === 'right' ? 'x' : 'y';\n    var scrollPosition = shape[axisProperties.scrollPosition[axis]];\n    var areNotAtStart = scrollPosition > 0;\n    var areNotAtEnd = scrollPosition + shape[axisProperties.clientLength[axis]] < shape[axisProperties.scrollLength[axis]];\n\n    if (goingForward && areNotAtEnd || !goingForward && areNotAtStart) {\n      return shape;\n    }\n\n    return null;\n  });\n}\n\nvar iOS = typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent);\nvar transitionDurationDefault = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\nvar useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nvar SwipeableDrawer = /*#__PURE__*/React.forwardRef(function SwipeableDrawer(inProps, ref) {\n  var theme = useTheme();\n  var props = getThemeProps({\n    name: 'MuiSwipeableDrawer',\n    props: _extends({}, inProps),\n    theme: theme\n  });\n  var _props$anchor = props.anchor,\n      anchor = _props$anchor === void 0 ? 'left' : _props$anchor,\n      _props$disableBackdro = props.disableBackdropTransition,\n      disableBackdropTransition = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n      _props$disableDiscove = props.disableDiscovery,\n      disableDiscovery = _props$disableDiscove === void 0 ? false : _props$disableDiscove,\n      _props$disableSwipeTo = props.disableSwipeToOpen,\n      disableSwipeToOpen = _props$disableSwipeTo === void 0 ? iOS : _props$disableSwipeTo,\n      hideBackdrop = props.hideBackdrop,\n      _props$hysteresis = props.hysteresis,\n      hysteresis = _props$hysteresis === void 0 ? 0.52 : _props$hysteresis,\n      _props$minFlingVeloci = props.minFlingVelocity,\n      minFlingVelocity = _props$minFlingVeloci === void 0 ? 450 : _props$minFlingVeloci,\n      _props$ModalProps = props.ModalProps;\n  _props$ModalProps = _props$ModalProps === void 0 ? {} : _props$ModalProps;\n\n  var BackdropProps = _props$ModalProps.BackdropProps,\n      ModalPropsProp = _objectWithoutProperties(_props$ModalProps, [\"BackdropProps\"]),\n      onClose = props.onClose,\n      onOpen = props.onOpen,\n      open = props.open,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      SwipeAreaProps = props.SwipeAreaProps,\n      _props$swipeAreaWidth = props.swipeAreaWidth,\n      swipeAreaWidth = _props$swipeAreaWidth === void 0 ? 20 : _props$swipeAreaWidth,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? transitionDurationDefault : _props$transitionDura,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'temporary' : _props$variant,\n      other = _objectWithoutProperties(props, [\"anchor\", \"disableBackdropTransition\", \"disableDiscovery\", \"disableSwipeToOpen\", \"hideBackdrop\", \"hysteresis\", \"minFlingVelocity\", \"ModalProps\", \"onClose\", \"onOpen\", \"open\", \"PaperProps\", \"SwipeAreaProps\", \"swipeAreaWidth\", \"transitionDuration\", \"variant\"]);\n\n  var _React$useState = React.useState(false),\n      maybeSwiping = _React$useState[0],\n      setMaybeSwiping = _React$useState[1];\n\n  var swipeInstance = React.useRef({\n    isSwiping: null\n  });\n  var swipeAreaRef = React.useRef();\n  var backdropRef = React.useRef();\n  var paperRef = React.useRef();\n  var touchDetected = React.useRef(false); // Ref for transition duration based on / to match swipe speed\n\n  var calculatedDurationRef = React.useRef(); // Use a ref so the open value used is always up to date inside useCallback.\n\n  useEnhancedEffect(function () {\n    calculatedDurationRef.current = null;\n  }, [open]);\n  var setPosition = React.useCallback(function (translate) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _options$mode = options.mode,\n        mode = _options$mode === void 0 ? null : _options$mode,\n        _options$changeTransi = options.changeTransition,\n        changeTransition = _options$changeTransi === void 0 ? true : _options$changeTransi;\n    var anchorRtl = getAnchor(theme, anchor);\n    var rtlTranslateMultiplier = ['right', 'bottom'].indexOf(anchorRtl) !== -1 ? 1 : -1;\n    var horizontalSwipe = isHorizontal(anchor);\n    var transform = horizontalSwipe ? \"translate(\".concat(rtlTranslateMultiplier * translate, \"px, 0)\") : \"translate(0, \".concat(rtlTranslateMultiplier * translate, \"px)\");\n    var drawerStyle = paperRef.current.style;\n    drawerStyle.webkitTransform = transform;\n    drawerStyle.transform = transform;\n    var transition = '';\n\n    if (mode) {\n      transition = theme.transitions.create('all', getTransitionProps({\n        timeout: transitionDuration\n      }, {\n        mode: mode\n      }));\n    }\n\n    if (changeTransition) {\n      drawerStyle.webkitTransition = transition;\n      drawerStyle.transition = transition;\n    }\n\n    if (!disableBackdropTransition && !hideBackdrop) {\n      var backdropStyle = backdropRef.current.style;\n      backdropStyle.opacity = 1 - translate / getMaxTranslate(horizontalSwipe, paperRef.current);\n\n      if (changeTransition) {\n        backdropStyle.webkitTransition = transition;\n        backdropStyle.transition = transition;\n      }\n    }\n  }, [anchor, disableBackdropTransition, hideBackdrop, theme, transitionDuration]);\n  var handleBodyTouchEnd = useEventCallback(function (event) {\n    if (!touchDetected.current) {\n      return;\n    }\n\n    nodeThatClaimedTheSwipe = null;\n    touchDetected.current = false;\n    setMaybeSwiping(false); // The swipe wasn't started.\n\n    if (!swipeInstance.current.isSwiping) {\n      swipeInstance.current.isSwiping = null;\n      return;\n    }\n\n    swipeInstance.current.isSwiping = null;\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontal = isHorizontal(anchor);\n    var current;\n\n    if (horizontal) {\n      current = calculateCurrentX(anchorRtl, event.changedTouches);\n    } else {\n      current = calculateCurrentY(anchorRtl, event.changedTouches);\n    }\n\n    var startLocation = horizontal ? swipeInstance.current.startX : swipeInstance.current.startY;\n    var maxTranslate = getMaxTranslate(horizontal, paperRef.current);\n    var currentTranslate = getTranslate(current, startLocation, open, maxTranslate);\n    var translateRatio = currentTranslate / maxTranslate;\n\n    if (Math.abs(swipeInstance.current.velocity) > minFlingVelocity) {\n      // Calculate transition duration to match swipe speed\n      calculatedDurationRef.current = Math.abs((maxTranslate - currentTranslate) / swipeInstance.current.velocity) * 1000;\n    }\n\n    if (open) {\n      if (swipeInstance.current.velocity > minFlingVelocity || translateRatio > hysteresis) {\n        onClose();\n      } else {\n        // Reset the position, the swipe was aborted.\n        setPosition(0, {\n          mode: 'exit'\n        });\n      }\n\n      return;\n    }\n\n    if (swipeInstance.current.velocity < -minFlingVelocity || 1 - translateRatio > hysteresis) {\n      onOpen();\n    } else {\n      // Reset the position, the swipe was aborted.\n      setPosition(getMaxTranslate(horizontal, paperRef.current), {\n        mode: 'enter'\n      });\n    }\n  });\n  var handleBodyTouchMove = useEventCallback(function (event) {\n    // the ref may be null when a parent component updates while swiping\n    if (!paperRef.current || !touchDetected.current) {\n      return;\n    } // We are not supposed to handle this touch move because the swipe was started in a scrollable container in the drawer\n\n\n    if (nodeThatClaimedTheSwipe != null && nodeThatClaimedTheSwipe !== swipeInstance.current) {\n      return;\n    }\n\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontalSwipe = isHorizontal(anchor);\n    var currentX = calculateCurrentX(anchorRtl, event.touches);\n    var currentY = calculateCurrentY(anchorRtl, event.touches);\n\n    if (open && paperRef.current.contains(event.target) && nodeThatClaimedTheSwipe == null) {\n      var domTreeShapes = getDomTreeShapes(event.target, paperRef.current);\n      var nativeHandler = findNativeHandler({\n        domTreeShapes: domTreeShapes,\n        start: horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY,\n        current: horizontalSwipe ? currentX : currentY,\n        anchor: anchor\n      });\n\n      if (nativeHandler) {\n        nodeThatClaimedTheSwipe = nativeHandler;\n        return;\n      }\n\n      nodeThatClaimedTheSwipe = swipeInstance.current;\n    } // We don't know yet.\n\n\n    if (swipeInstance.current.isSwiping == null) {\n      var dx = Math.abs(currentX - swipeInstance.current.startX);\n      var dy = Math.abs(currentY - swipeInstance.current.startY); // We are likely to be swiping, let's prevent the scroll event on iOS.\n\n      if (dx > dy) {\n        if (event.cancelable) {\n          event.preventDefault();\n        }\n      }\n\n      var definitelySwiping = horizontalSwipe ? dx > dy && dx > UNCERTAINTY_THRESHOLD : dy > dx && dy > UNCERTAINTY_THRESHOLD;\n\n      if (definitelySwiping === true || (horizontalSwipe ? dy > UNCERTAINTY_THRESHOLD : dx > UNCERTAINTY_THRESHOLD)) {\n        swipeInstance.current.isSwiping = definitelySwiping;\n\n        if (!definitelySwiping) {\n          handleBodyTouchEnd(event);\n          return;\n        } // Shift the starting point.\n\n\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY; // Compensate for the part of the drawer displayed on touch start.\n\n        if (!disableDiscovery && !open) {\n          if (horizontalSwipe) {\n            swipeInstance.current.startX -= swipeAreaWidth;\n          } else {\n            swipeInstance.current.startY -= swipeAreaWidth;\n          }\n        }\n      }\n    }\n\n    if (!swipeInstance.current.isSwiping) {\n      return;\n    }\n\n    var maxTranslate = getMaxTranslate(horizontalSwipe, paperRef.current);\n    var startLocation = horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY;\n\n    if (open && !swipeInstance.current.paperHit) {\n      startLocation = Math.min(startLocation, maxTranslate);\n    }\n\n    var translate = getTranslate(horizontalSwipe ? currentX : currentY, startLocation, open, maxTranslate);\n\n    if (open) {\n      if (!swipeInstance.current.paperHit) {\n        var paperHit = horizontalSwipe ? currentX < maxTranslate : currentY < maxTranslate;\n\n        if (paperHit) {\n          swipeInstance.current.paperHit = true;\n          swipeInstance.current.startX = currentX;\n          swipeInstance.current.startY = currentY;\n        } else {\n          return;\n        }\n      } else if (translate === 0) {\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY;\n      }\n    }\n\n    if (swipeInstance.current.lastTranslate === null) {\n      swipeInstance.current.lastTranslate = translate;\n      swipeInstance.current.lastTime = performance.now() + 1;\n    }\n\n    var velocity = (translate - swipeInstance.current.lastTranslate) / (performance.now() - swipeInstance.current.lastTime) * 1e3; // Low Pass filter.\n\n    swipeInstance.current.velocity = swipeInstance.current.velocity * 0.4 + velocity * 0.6;\n    swipeInstance.current.lastTranslate = translate;\n    swipeInstance.current.lastTime = performance.now(); // We are swiping, let's prevent the scroll event on iOS.\n\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n\n    setPosition(translate);\n  });\n  var handleBodyTouchStart = useEventCallback(function (event) {\n    // We are not supposed to handle this touch move.\n    // Example of use case: ignore the event if there is a Slider.\n    if (event.defaultPrevented) {\n      return;\n    } // We can only have one node at the time claiming ownership for handling the swipe.\n\n\n    if (event.muiHandled) {\n      return;\n    } // At least one element clogs the drawer interaction zone.\n\n\n    if (open && !backdropRef.current.contains(event.target) && !paperRef.current.contains(event.target)) {\n      return;\n    }\n\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontalSwipe = isHorizontal(anchor);\n    var currentX = calculateCurrentX(anchorRtl, event.touches);\n    var currentY = calculateCurrentY(anchorRtl, event.touches);\n\n    if (!open) {\n      if (disableSwipeToOpen || event.target !== swipeAreaRef.current) {\n        return;\n      }\n\n      if (horizontalSwipe) {\n        if (currentX > swipeAreaWidth) {\n          return;\n        }\n      } else if (currentY > swipeAreaWidth) {\n        return;\n      }\n    }\n\n    event.muiHandled = true;\n    nodeThatClaimedTheSwipe = null;\n    swipeInstance.current.startX = currentX;\n    swipeInstance.current.startY = currentY;\n    setMaybeSwiping(true);\n\n    if (!open && paperRef.current) {\n      // The ref may be null when a parent component updates while swiping.\n      setPosition(getMaxTranslate(horizontalSwipe, paperRef.current) + (disableDiscovery ? 20 : -swipeAreaWidth), {\n        changeTransition: false\n      });\n    }\n\n    swipeInstance.current.velocity = 0;\n    swipeInstance.current.lastTime = null;\n    swipeInstance.current.lastTranslate = null;\n    swipeInstance.current.paperHit = false;\n    touchDetected.current = true;\n  });\n  React.useEffect(function () {\n    if (variant === 'temporary') {\n      var doc = ownerDocument(paperRef.current);\n      doc.addEventListener('touchstart', handleBodyTouchStart);\n      doc.addEventListener('touchmove', handleBodyTouchMove, {\n        passive: false\n      });\n      doc.addEventListener('touchend', handleBodyTouchEnd);\n      return function () {\n        doc.removeEventListener('touchstart', handleBodyTouchStart);\n        doc.removeEventListener('touchmove', handleBodyTouchMove, {\n          passive: false\n        });\n        doc.removeEventListener('touchend', handleBodyTouchEnd);\n      };\n    }\n\n    return undefined;\n  }, [variant, handleBodyTouchStart, handleBodyTouchMove, handleBodyTouchEnd]);\n  React.useEffect(function () {\n    return function () {\n      // We need to release the lock.\n      if (nodeThatClaimedTheSwipe === swipeInstance.current) {\n        nodeThatClaimedTheSwipe = null;\n      }\n    };\n  }, []);\n  React.useEffect(function () {\n    if (!open) {\n      setMaybeSwiping(false);\n    }\n  }, [open]);\n  var handleBackdropRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    backdropRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Drawer, _extends({\n    open: variant === 'temporary' && maybeSwiping ? true : open,\n    variant: variant,\n    ModalProps: _extends({\n      BackdropProps: _extends({}, BackdropProps, {\n        ref: handleBackdropRef\n      })\n    }, ModalPropsProp),\n    PaperProps: _extends({}, PaperProps, {\n      style: _extends({\n        pointerEvents: variant === 'temporary' && !open ? 'none' : ''\n      }, PaperProps.style),\n      ref: paperRef\n    }),\n    anchor: anchor,\n    transitionDuration: calculatedDurationRef.current || transitionDuration,\n    onClose: onClose,\n    ref: ref\n  }, other)), !disableSwipeToOpen && variant === 'temporary' && /*#__PURE__*/React.createElement(NoSsr, null, /*#__PURE__*/React.createElement(SwipeArea, _extends({\n    anchor: anchor,\n    ref: swipeAreaRef,\n    width: swipeAreaWidth\n  }, SwipeAreaProps))));\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeableDrawer.propTypes = {\n  /**\n   * @ignore\n   */\n  anchor: PropTypes.oneOf(['left', 'top', 'right', 'bottom']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Disable the backdrop transition.\n   * This can improve the FPS on low-end devices.\n   */\n  disableBackdropTransition: PropTypes.bool,\n\n  /**\n   * If `true`, touching the screen near the edge of the drawer will not slide in the drawer a bit\n   * to promote accidental discovery of the swipe gesture.\n   */\n  disableDiscovery: PropTypes.bool,\n\n  /**\n   * If `true`, swipe to open is disabled. This is useful in browsers where swiping triggers\n   * navigation actions. Swipe to open is disabled on iOS browsers by default.\n   */\n  disableSwipeToOpen: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Affects how far the drawer must be opened/closed to change his state.\n   * Specified as percent (0-1) of the width of the drawer\n   */\n  hysteresis: PropTypes.number,\n\n  /**\n   * Defines, from which (average) velocity on, the swipe is\n   * defined as complete although hysteresis isn't reached.\n   * Good threshold is between 250 - 1000 px/s\n   */\n  minFlingVelocity: PropTypes.number,\n\n  /**\n   * @ignore\n   */\n  ModalProps: PropTypes.shape({\n    BackdropProps: PropTypes.shape({\n      component: elementTypeAcceptingRef\n    })\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func.isRequired,\n\n  /**\n   * If `true`, the drawer is open.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  PaperProps: PropTypes.shape({\n    component: elementTypeAcceptingRef,\n    style: PropTypes.object\n  }),\n\n  /**\n   * The element is used to intercept the touch events on the edge.\n   */\n  SwipeAreaProps: PropTypes.object,\n\n  /**\n   * The width of the left most (or right most) area in pixels where the\n   * drawer can be swiped open from.\n   */\n  swipeAreaWidth: PropTypes.number,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * @ignore\n   */\n  variant: PropTypes.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nexport default SwipeableDrawer;","map":{"version":3,"names":["_objectWithoutProperties","_extends","React","PropTypes","ReactDOM","elementTypeAcceptingRef","getThemeProps","Drawer","getAnchor","isHorizontal","ownerDocument","useEventCallback","duration","useTheme","getTransitionProps","NoSsr","SwipeArea","UNCERTAINTY_THRESHOLD","nodeThatClaimedTheSwipe","reset","calculateCurrentX","anchor","touches","document","body","offsetWidth","pageX","calculateCurrentY","window","innerHeight","clientY","getMaxTranslate","horizontalSwipe","paperInstance","clientWidth","clientHeight","getTranslate","currentTranslate","startLocation","open","maxTranslate","Math","min","max","getDomTreeShapes","element","rootNode","domTreeShapes","style","getComputedStyle","getPropertyValue","scrollWidth","scrollHeight","push","parentElement","findNativeHandler","_ref","start","current","axisProperties","scrollPosition","x","y","scrollLength","clientLength","some","shape","goingForward","axis","areNotAtStart","areNotAtEnd","iOS","navigator","test","userAgent","transitionDurationDefault","enter","enteringScreen","exit","leavingScreen","useEnhancedEffect","useLayoutEffect","useEffect","SwipeableDrawer","forwardRef","inProps","ref","theme","props","name","_props$anchor","_props$disableBackdro","disableBackdropTransition","_props$disableDiscove","disableDiscovery","_props$disableSwipeTo","disableSwipeToOpen","hideBackdrop","_props$hysteresis","hysteresis","_props$minFlingVeloci","minFlingVelocity","_props$ModalProps","ModalProps","BackdropProps","ModalPropsProp","onClose","onOpen","_props$PaperProps","PaperProps","SwipeAreaProps","_props$swipeAreaWidth","swipeAreaWidth","_props$transitionDura","transitionDuration","_props$variant","variant","other","_React$useState","useState","maybeSwiping","setMaybeSwiping","swipeInstance","useRef","isSwiping","swipeAreaRef","backdropRef","paperRef","touchDetected","calculatedDurationRef","setPosition","useCallback","translate","options","arguments","length","undefined","_options$mode","mode","_options$changeTransi","changeTransition","anchorRtl","rtlTranslateMultiplier","indexOf","transform","concat","drawerStyle","webkitTransform","transition","transitions","create","timeout","webkitTransition","backdropStyle","opacity","handleBodyTouchEnd","event","horizontal","changedTouches","startX","startY","translateRatio","abs","velocity","handleBodyTouchMove","currentX","currentY","contains","target","nativeHandler","dx","dy","cancelable","preventDefault","definitelySwiping","paperHit","lastTranslate","lastTime","performance","now","handleBodyTouchStart","defaultPrevented","muiHandled","doc","addEventListener","passive","removeEventListener","handleBackdropRef","instance","findDOMNode","createElement","Fragment","pointerEvents","width","process","env","NODE_ENV","propTypes","oneOf","children","node","bool","number","component","func","isRequired","object","oneOfType"],"sources":["C:/Users/DELL/Desktop/whatsapp-mern/node_modules/@material-ui/core/esm/SwipeableDrawer/SwipeableDrawer.js"],"sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport { getThemeProps } from '@material-ui/styles';\nimport Drawer, { getAnchor, isHorizontal } from '../Drawer/Drawer';\nimport ownerDocument from '../utils/ownerDocument';\nimport useEventCallback from '../utils/useEventCallback';\nimport { duration } from '../styles/transitions';\nimport useTheme from '../styles/useTheme';\nimport { getTransitionProps } from '../transitions/utils';\nimport NoSsr from '../NoSsr';\nimport SwipeArea from './SwipeArea'; // This value is closed to what browsers are using internally to\n// trigger a native scroll.\n\nvar UNCERTAINTY_THRESHOLD = 3; // px\n// We can only have one node at the time claiming ownership for handling the swipe.\n// Otherwise, the UX would be confusing.\n// That's why we use a singleton here.\n\nvar nodeThatClaimedTheSwipe = null; // Exported for test purposes.\n\nexport function reset() {\n  nodeThatClaimedTheSwipe = null;\n}\n\nfunction calculateCurrentX(anchor, touches) {\n  return anchor === 'right' ? document.body.offsetWidth - touches[0].pageX : touches[0].pageX;\n}\n\nfunction calculateCurrentY(anchor, touches) {\n  return anchor === 'bottom' ? window.innerHeight - touches[0].clientY : touches[0].clientY;\n}\n\nfunction getMaxTranslate(horizontalSwipe, paperInstance) {\n  return horizontalSwipe ? paperInstance.clientWidth : paperInstance.clientHeight;\n}\n\nfunction getTranslate(currentTranslate, startLocation, open, maxTranslate) {\n  return Math.min(Math.max(open ? startLocation - currentTranslate : maxTranslate + startLocation - currentTranslate, 0), maxTranslate);\n}\n\nfunction getDomTreeShapes(element, rootNode) {\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L129\n  var domTreeShapes = [];\n\n  while (element && element !== rootNode) {\n    var style = window.getComputedStyle(element);\n\n    if ( // Ignore the scroll children if the element is absolute positioned.\n    style.getPropertyValue('position') === 'absolute' || // Ignore the scroll children if the element has an overflowX hidden\n    style.getPropertyValue('overflow-x') === 'hidden') {\n      domTreeShapes = [];\n    } else if (element.clientWidth > 0 && element.scrollWidth > element.clientWidth || element.clientHeight > 0 && element.scrollHeight > element.clientHeight) {\n      // Ignore the nodes that have no width.\n      // Keep elements with a scroll\n      domTreeShapes.push(element);\n    }\n\n    element = element.parentElement;\n  }\n\n  return domTreeShapes;\n}\n\nfunction findNativeHandler(_ref) {\n  var domTreeShapes = _ref.domTreeShapes,\n      start = _ref.start,\n      current = _ref.current,\n      anchor = _ref.anchor;\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L175\n  var axisProperties = {\n    scrollPosition: {\n      x: 'scrollLeft',\n      y: 'scrollTop'\n    },\n    scrollLength: {\n      x: 'scrollWidth',\n      y: 'scrollHeight'\n    },\n    clientLength: {\n      x: 'clientWidth',\n      y: 'clientHeight'\n    }\n  };\n  return domTreeShapes.some(function (shape) {\n    // Determine if we are going backward or forward.\n    var goingForward = current >= start;\n\n    if (anchor === 'top' || anchor === 'left') {\n      goingForward = !goingForward;\n    }\n\n    var axis = anchor === 'left' || anchor === 'right' ? 'x' : 'y';\n    var scrollPosition = shape[axisProperties.scrollPosition[axis]];\n    var areNotAtStart = scrollPosition > 0;\n    var areNotAtEnd = scrollPosition + shape[axisProperties.clientLength[axis]] < shape[axisProperties.scrollLength[axis]];\n\n    if (goingForward && areNotAtEnd || !goingForward && areNotAtStart) {\n      return shape;\n    }\n\n    return null;\n  });\n}\n\nvar iOS = typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent);\nvar transitionDurationDefault = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\nvar useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nvar SwipeableDrawer = /*#__PURE__*/React.forwardRef(function SwipeableDrawer(inProps, ref) {\n  var theme = useTheme();\n  var props = getThemeProps({\n    name: 'MuiSwipeableDrawer',\n    props: _extends({}, inProps),\n    theme: theme\n  });\n  var _props$anchor = props.anchor,\n      anchor = _props$anchor === void 0 ? 'left' : _props$anchor,\n      _props$disableBackdro = props.disableBackdropTransition,\n      disableBackdropTransition = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n      _props$disableDiscove = props.disableDiscovery,\n      disableDiscovery = _props$disableDiscove === void 0 ? false : _props$disableDiscove,\n      _props$disableSwipeTo = props.disableSwipeToOpen,\n      disableSwipeToOpen = _props$disableSwipeTo === void 0 ? iOS : _props$disableSwipeTo,\n      hideBackdrop = props.hideBackdrop,\n      _props$hysteresis = props.hysteresis,\n      hysteresis = _props$hysteresis === void 0 ? 0.52 : _props$hysteresis,\n      _props$minFlingVeloci = props.minFlingVelocity,\n      minFlingVelocity = _props$minFlingVeloci === void 0 ? 450 : _props$minFlingVeloci,\n      _props$ModalProps = props.ModalProps;\n  _props$ModalProps = _props$ModalProps === void 0 ? {} : _props$ModalProps;\n\n  var BackdropProps = _props$ModalProps.BackdropProps,\n      ModalPropsProp = _objectWithoutProperties(_props$ModalProps, [\"BackdropProps\"]),\n      onClose = props.onClose,\n      onOpen = props.onOpen,\n      open = props.open,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      SwipeAreaProps = props.SwipeAreaProps,\n      _props$swipeAreaWidth = props.swipeAreaWidth,\n      swipeAreaWidth = _props$swipeAreaWidth === void 0 ? 20 : _props$swipeAreaWidth,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? transitionDurationDefault : _props$transitionDura,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'temporary' : _props$variant,\n      other = _objectWithoutProperties(props, [\"anchor\", \"disableBackdropTransition\", \"disableDiscovery\", \"disableSwipeToOpen\", \"hideBackdrop\", \"hysteresis\", \"minFlingVelocity\", \"ModalProps\", \"onClose\", \"onOpen\", \"open\", \"PaperProps\", \"SwipeAreaProps\", \"swipeAreaWidth\", \"transitionDuration\", \"variant\"]);\n\n  var _React$useState = React.useState(false),\n      maybeSwiping = _React$useState[0],\n      setMaybeSwiping = _React$useState[1];\n\n  var swipeInstance = React.useRef({\n    isSwiping: null\n  });\n  var swipeAreaRef = React.useRef();\n  var backdropRef = React.useRef();\n  var paperRef = React.useRef();\n  var touchDetected = React.useRef(false); // Ref for transition duration based on / to match swipe speed\n\n  var calculatedDurationRef = React.useRef(); // Use a ref so the open value used is always up to date inside useCallback.\n\n  useEnhancedEffect(function () {\n    calculatedDurationRef.current = null;\n  }, [open]);\n  var setPosition = React.useCallback(function (translate) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _options$mode = options.mode,\n        mode = _options$mode === void 0 ? null : _options$mode,\n        _options$changeTransi = options.changeTransition,\n        changeTransition = _options$changeTransi === void 0 ? true : _options$changeTransi;\n    var anchorRtl = getAnchor(theme, anchor);\n    var rtlTranslateMultiplier = ['right', 'bottom'].indexOf(anchorRtl) !== -1 ? 1 : -1;\n    var horizontalSwipe = isHorizontal(anchor);\n    var transform = horizontalSwipe ? \"translate(\".concat(rtlTranslateMultiplier * translate, \"px, 0)\") : \"translate(0, \".concat(rtlTranslateMultiplier * translate, \"px)\");\n    var drawerStyle = paperRef.current.style;\n    drawerStyle.webkitTransform = transform;\n    drawerStyle.transform = transform;\n    var transition = '';\n\n    if (mode) {\n      transition = theme.transitions.create('all', getTransitionProps({\n        timeout: transitionDuration\n      }, {\n        mode: mode\n      }));\n    }\n\n    if (changeTransition) {\n      drawerStyle.webkitTransition = transition;\n      drawerStyle.transition = transition;\n    }\n\n    if (!disableBackdropTransition && !hideBackdrop) {\n      var backdropStyle = backdropRef.current.style;\n      backdropStyle.opacity = 1 - translate / getMaxTranslate(horizontalSwipe, paperRef.current);\n\n      if (changeTransition) {\n        backdropStyle.webkitTransition = transition;\n        backdropStyle.transition = transition;\n      }\n    }\n  }, [anchor, disableBackdropTransition, hideBackdrop, theme, transitionDuration]);\n  var handleBodyTouchEnd = useEventCallback(function (event) {\n    if (!touchDetected.current) {\n      return;\n    }\n\n    nodeThatClaimedTheSwipe = null;\n    touchDetected.current = false;\n    setMaybeSwiping(false); // The swipe wasn't started.\n\n    if (!swipeInstance.current.isSwiping) {\n      swipeInstance.current.isSwiping = null;\n      return;\n    }\n\n    swipeInstance.current.isSwiping = null;\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontal = isHorizontal(anchor);\n    var current;\n\n    if (horizontal) {\n      current = calculateCurrentX(anchorRtl, event.changedTouches);\n    } else {\n      current = calculateCurrentY(anchorRtl, event.changedTouches);\n    }\n\n    var startLocation = horizontal ? swipeInstance.current.startX : swipeInstance.current.startY;\n    var maxTranslate = getMaxTranslate(horizontal, paperRef.current);\n    var currentTranslate = getTranslate(current, startLocation, open, maxTranslate);\n    var translateRatio = currentTranslate / maxTranslate;\n\n    if (Math.abs(swipeInstance.current.velocity) > minFlingVelocity) {\n      // Calculate transition duration to match swipe speed\n      calculatedDurationRef.current = Math.abs((maxTranslate - currentTranslate) / swipeInstance.current.velocity) * 1000;\n    }\n\n    if (open) {\n      if (swipeInstance.current.velocity > minFlingVelocity || translateRatio > hysteresis) {\n        onClose();\n      } else {\n        // Reset the position, the swipe was aborted.\n        setPosition(0, {\n          mode: 'exit'\n        });\n      }\n\n      return;\n    }\n\n    if (swipeInstance.current.velocity < -minFlingVelocity || 1 - translateRatio > hysteresis) {\n      onOpen();\n    } else {\n      // Reset the position, the swipe was aborted.\n      setPosition(getMaxTranslate(horizontal, paperRef.current), {\n        mode: 'enter'\n      });\n    }\n  });\n  var handleBodyTouchMove = useEventCallback(function (event) {\n    // the ref may be null when a parent component updates while swiping\n    if (!paperRef.current || !touchDetected.current) {\n      return;\n    } // We are not supposed to handle this touch move because the swipe was started in a scrollable container in the drawer\n\n\n    if (nodeThatClaimedTheSwipe != null && nodeThatClaimedTheSwipe !== swipeInstance.current) {\n      return;\n    }\n\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontalSwipe = isHorizontal(anchor);\n    var currentX = calculateCurrentX(anchorRtl, event.touches);\n    var currentY = calculateCurrentY(anchorRtl, event.touches);\n\n    if (open && paperRef.current.contains(event.target) && nodeThatClaimedTheSwipe == null) {\n      var domTreeShapes = getDomTreeShapes(event.target, paperRef.current);\n      var nativeHandler = findNativeHandler({\n        domTreeShapes: domTreeShapes,\n        start: horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY,\n        current: horizontalSwipe ? currentX : currentY,\n        anchor: anchor\n      });\n\n      if (nativeHandler) {\n        nodeThatClaimedTheSwipe = nativeHandler;\n        return;\n      }\n\n      nodeThatClaimedTheSwipe = swipeInstance.current;\n    } // We don't know yet.\n\n\n    if (swipeInstance.current.isSwiping == null) {\n      var dx = Math.abs(currentX - swipeInstance.current.startX);\n      var dy = Math.abs(currentY - swipeInstance.current.startY); // We are likely to be swiping, let's prevent the scroll event on iOS.\n\n      if (dx > dy) {\n        if (event.cancelable) {\n          event.preventDefault();\n        }\n      }\n\n      var definitelySwiping = horizontalSwipe ? dx > dy && dx > UNCERTAINTY_THRESHOLD : dy > dx && dy > UNCERTAINTY_THRESHOLD;\n\n      if (definitelySwiping === true || (horizontalSwipe ? dy > UNCERTAINTY_THRESHOLD : dx > UNCERTAINTY_THRESHOLD)) {\n        swipeInstance.current.isSwiping = definitelySwiping;\n\n        if (!definitelySwiping) {\n          handleBodyTouchEnd(event);\n          return;\n        } // Shift the starting point.\n\n\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY; // Compensate for the part of the drawer displayed on touch start.\n\n        if (!disableDiscovery && !open) {\n          if (horizontalSwipe) {\n            swipeInstance.current.startX -= swipeAreaWidth;\n          } else {\n            swipeInstance.current.startY -= swipeAreaWidth;\n          }\n        }\n      }\n    }\n\n    if (!swipeInstance.current.isSwiping) {\n      return;\n    }\n\n    var maxTranslate = getMaxTranslate(horizontalSwipe, paperRef.current);\n    var startLocation = horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY;\n\n    if (open && !swipeInstance.current.paperHit) {\n      startLocation = Math.min(startLocation, maxTranslate);\n    }\n\n    var translate = getTranslate(horizontalSwipe ? currentX : currentY, startLocation, open, maxTranslate);\n\n    if (open) {\n      if (!swipeInstance.current.paperHit) {\n        var paperHit = horizontalSwipe ? currentX < maxTranslate : currentY < maxTranslate;\n\n        if (paperHit) {\n          swipeInstance.current.paperHit = true;\n          swipeInstance.current.startX = currentX;\n          swipeInstance.current.startY = currentY;\n        } else {\n          return;\n        }\n      } else if (translate === 0) {\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY;\n      }\n    }\n\n    if (swipeInstance.current.lastTranslate === null) {\n      swipeInstance.current.lastTranslate = translate;\n      swipeInstance.current.lastTime = performance.now() + 1;\n    }\n\n    var velocity = (translate - swipeInstance.current.lastTranslate) / (performance.now() - swipeInstance.current.lastTime) * 1e3; // Low Pass filter.\n\n    swipeInstance.current.velocity = swipeInstance.current.velocity * 0.4 + velocity * 0.6;\n    swipeInstance.current.lastTranslate = translate;\n    swipeInstance.current.lastTime = performance.now(); // We are swiping, let's prevent the scroll event on iOS.\n\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n\n    setPosition(translate);\n  });\n  var handleBodyTouchStart = useEventCallback(function (event) {\n    // We are not supposed to handle this touch move.\n    // Example of use case: ignore the event if there is a Slider.\n    if (event.defaultPrevented) {\n      return;\n    } // We can only have one node at the time claiming ownership for handling the swipe.\n\n\n    if (event.muiHandled) {\n      return;\n    } // At least one element clogs the drawer interaction zone.\n\n\n    if (open && !backdropRef.current.contains(event.target) && !paperRef.current.contains(event.target)) {\n      return;\n    }\n\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontalSwipe = isHorizontal(anchor);\n    var currentX = calculateCurrentX(anchorRtl, event.touches);\n    var currentY = calculateCurrentY(anchorRtl, event.touches);\n\n    if (!open) {\n      if (disableSwipeToOpen || event.target !== swipeAreaRef.current) {\n        return;\n      }\n\n      if (horizontalSwipe) {\n        if (currentX > swipeAreaWidth) {\n          return;\n        }\n      } else if (currentY > swipeAreaWidth) {\n        return;\n      }\n    }\n\n    event.muiHandled = true;\n    nodeThatClaimedTheSwipe = null;\n    swipeInstance.current.startX = currentX;\n    swipeInstance.current.startY = currentY;\n    setMaybeSwiping(true);\n\n    if (!open && paperRef.current) {\n      // The ref may be null when a parent component updates while swiping.\n      setPosition(getMaxTranslate(horizontalSwipe, paperRef.current) + (disableDiscovery ? 20 : -swipeAreaWidth), {\n        changeTransition: false\n      });\n    }\n\n    swipeInstance.current.velocity = 0;\n    swipeInstance.current.lastTime = null;\n    swipeInstance.current.lastTranslate = null;\n    swipeInstance.current.paperHit = false;\n    touchDetected.current = true;\n  });\n  React.useEffect(function () {\n    if (variant === 'temporary') {\n      var doc = ownerDocument(paperRef.current);\n      doc.addEventListener('touchstart', handleBodyTouchStart);\n      doc.addEventListener('touchmove', handleBodyTouchMove, {\n        passive: false\n      });\n      doc.addEventListener('touchend', handleBodyTouchEnd);\n      return function () {\n        doc.removeEventListener('touchstart', handleBodyTouchStart);\n        doc.removeEventListener('touchmove', handleBodyTouchMove, {\n          passive: false\n        });\n        doc.removeEventListener('touchend', handleBodyTouchEnd);\n      };\n    }\n\n    return undefined;\n  }, [variant, handleBodyTouchStart, handleBodyTouchMove, handleBodyTouchEnd]);\n  React.useEffect(function () {\n    return function () {\n      // We need to release the lock.\n      if (nodeThatClaimedTheSwipe === swipeInstance.current) {\n        nodeThatClaimedTheSwipe = null;\n      }\n    };\n  }, []);\n  React.useEffect(function () {\n    if (!open) {\n      setMaybeSwiping(false);\n    }\n  }, [open]);\n  var handleBackdropRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    backdropRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Drawer, _extends({\n    open: variant === 'temporary' && maybeSwiping ? true : open,\n    variant: variant,\n    ModalProps: _extends({\n      BackdropProps: _extends({}, BackdropProps, {\n        ref: handleBackdropRef\n      })\n    }, ModalPropsProp),\n    PaperProps: _extends({}, PaperProps, {\n      style: _extends({\n        pointerEvents: variant === 'temporary' && !open ? 'none' : ''\n      }, PaperProps.style),\n      ref: paperRef\n    }),\n    anchor: anchor,\n    transitionDuration: calculatedDurationRef.current || transitionDuration,\n    onClose: onClose,\n    ref: ref\n  }, other)), !disableSwipeToOpen && variant === 'temporary' && /*#__PURE__*/React.createElement(NoSsr, null, /*#__PURE__*/React.createElement(SwipeArea, _extends({\n    anchor: anchor,\n    ref: swipeAreaRef,\n    width: swipeAreaWidth\n  }, SwipeAreaProps))));\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeableDrawer.propTypes = {\n  /**\n   * @ignore\n   */\n  anchor: PropTypes.oneOf(['left', 'top', 'right', 'bottom']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Disable the backdrop transition.\n   * This can improve the FPS on low-end devices.\n   */\n  disableBackdropTransition: PropTypes.bool,\n\n  /**\n   * If `true`, touching the screen near the edge of the drawer will not slide in the drawer a bit\n   * to promote accidental discovery of the swipe gesture.\n   */\n  disableDiscovery: PropTypes.bool,\n\n  /**\n   * If `true`, swipe to open is disabled. This is useful in browsers where swiping triggers\n   * navigation actions. Swipe to open is disabled on iOS browsers by default.\n   */\n  disableSwipeToOpen: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Affects how far the drawer must be opened/closed to change his state.\n   * Specified as percent (0-1) of the width of the drawer\n   */\n  hysteresis: PropTypes.number,\n\n  /**\n   * Defines, from which (average) velocity on, the swipe is\n   * defined as complete although hysteresis isn't reached.\n   * Good threshold is between 250 - 1000 px/s\n   */\n  minFlingVelocity: PropTypes.number,\n\n  /**\n   * @ignore\n   */\n  ModalProps: PropTypes.shape({\n    BackdropProps: PropTypes.shape({\n      component: elementTypeAcceptingRef\n    })\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func.isRequired,\n\n  /**\n   * If `true`, the drawer is open.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  PaperProps: PropTypes.shape({\n    component: elementTypeAcceptingRef,\n    style: PropTypes.object\n  }),\n\n  /**\n   * The element is used to intercept the touch events on the edge.\n   */\n  SwipeAreaProps: PropTypes.object,\n\n  /**\n   * The width of the left most (or right most) area in pixels where the\n   * drawer can be swiped open from.\n   */\n  swipeAreaWidth: PropTypes.number,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * @ignore\n   */\n  variant: PropTypes.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nexport default SwipeableDrawer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}