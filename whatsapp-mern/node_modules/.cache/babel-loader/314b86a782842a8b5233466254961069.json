{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport areArraysEqual from '../utils/areArraysEqual';\n/**\n * Gets the current state. If the selectedValue is controlled,\n * the `value` prop is the source of truth instead of the internal state.\n */\n\nfunction getControlledState(internalState, props) {\n  if (props.value !== undefined) {\n    return _extends({}, internalState, {\n      selectedValue: props.value\n    });\n  }\n\n  return internalState;\n}\n\nfunction areOptionsEqual(option1, option2, optionComparer) {\n  if (option1 === option2) {\n    return true;\n  }\n\n  if (option1 === null || option2 === null) {\n    return false;\n  }\n\n  return optionComparer(option1, option2);\n}\n/**\n * Triggers change event handlers when reducer returns changed state.\n */\n\n\nfunction useStateChangeDetection(nextState, internalPreviousState, propsRef, hasDispatchedActionRef) {\n  React.useEffect(() => {\n    if (!propsRef.current || !hasDispatchedActionRef.current) {\n      // Detect changes only if an action has been dispatched.\n      return;\n    }\n\n    hasDispatchedActionRef.current = false;\n    const previousState = getControlledState(internalPreviousState, propsRef.current);\n    const {\n      multiple,\n      optionComparer\n    } = propsRef.current;\n\n    if (multiple) {\n      var _previousState$select;\n\n      const previousSelectedValues = (_previousState$select = previousState == null ? void 0 : previousState.selectedValue) != null ? _previousState$select : [];\n      const nextSelectedValues = nextState.selectedValue;\n      const onChange = propsRef.current.onChange;\n\n      if (!areArraysEqual(nextSelectedValues, previousSelectedValues, optionComparer)) {\n        onChange == null ? void 0 : onChange(nextSelectedValues);\n      }\n    } else {\n      const previousSelectedValue = previousState == null ? void 0 : previousState.selectedValue;\n      const nextSelectedValue = nextState.selectedValue;\n      const onChange = propsRef.current.onChange;\n\n      if (!areOptionsEqual(nextSelectedValue, previousSelectedValue, optionComparer)) {\n        onChange == null ? void 0 : onChange(nextSelectedValue);\n      }\n    }\n  }, [nextState.selectedValue, internalPreviousState, propsRef, hasDispatchedActionRef]);\n  React.useEffect(() => {\n    if (!propsRef.current) {\n      return;\n    } // Fires the highlightChange event when reducer returns changed `highlightedValue`.\n\n\n    if (!areOptionsEqual(internalPreviousState.highlightedValue, nextState.highlightedValue, propsRef.current.optionComparer)) {\n      var _propsRef$current, _propsRef$current$onH;\n\n      (_propsRef$current = propsRef.current) == null ? void 0 : (_propsRef$current$onH = _propsRef$current.onHighlightChange) == null ? void 0 : _propsRef$current$onH.call(_propsRef$current, nextState.highlightedValue);\n    }\n  }, [nextState.highlightedValue, internalPreviousState.highlightedValue, propsRef]);\n}\n\nexport default function useControllableReducer(internalReducer, externalReducer, props) {\n  var _ref;\n\n  const {\n    value,\n    defaultValue\n  } = props;\n  const propsRef = React.useRef(props);\n  propsRef.current = props;\n  const hasDispatchedActionRef = React.useRef(false);\n  const initialSelectedValue = (_ref = value === undefined ? defaultValue : value) != null ? _ref : props.multiple ? [] : null;\n  const initalState = {\n    highlightedValue: null,\n    selectedValue: initialSelectedValue\n  };\n  const combinedReducer = React.useCallback((state, action) => {\n    hasDispatchedActionRef.current = true;\n\n    if (externalReducer) {\n      return externalReducer(getControlledState(state, propsRef.current), action);\n    }\n\n    return internalReducer(getControlledState(state, propsRef.current), action);\n  }, [externalReducer, internalReducer, propsRef]);\n  const [nextState, dispatch] = React.useReducer(combinedReducer, initalState);\n  const previousState = React.useRef(initalState);\n  React.useEffect(() => {\n    previousState.current = nextState;\n  }, [previousState, nextState]);\n  useStateChangeDetection(nextState, previousState.current, propsRef, hasDispatchedActionRef);\n  return [getControlledState(nextState, propsRef.current), dispatch];\n}","map":{"version":3,"names":["_extends","React","areArraysEqual","getControlledState","internalState","props","value","undefined","selectedValue","areOptionsEqual","option1","option2","optionComparer","useStateChangeDetection","nextState","internalPreviousState","propsRef","hasDispatchedActionRef","useEffect","current","previousState","multiple","_previousState$select","previousSelectedValues","nextSelectedValues","onChange","previousSelectedValue","nextSelectedValue","highlightedValue","_propsRef$current","_propsRef$current$onH","onHighlightChange","call","useControllableReducer","internalReducer","externalReducer","_ref","defaultValue","useRef","initialSelectedValue","initalState","combinedReducer","useCallback","state","action","dispatch","useReducer"],"sources":["C:/Users/DELL/Desktop/whatsapp/whatsapp-mern/node_modules/@mui/base/ListboxUnstyled/useControllableReducer.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport areArraysEqual from '../utils/areArraysEqual';\n/**\n * Gets the current state. If the selectedValue is controlled,\n * the `value` prop is the source of truth instead of the internal state.\n */\n\nfunction getControlledState(internalState, props) {\n  if (props.value !== undefined) {\n    return _extends({}, internalState, {\n      selectedValue: props.value\n    });\n  }\n\n  return internalState;\n}\n\nfunction areOptionsEqual(option1, option2, optionComparer) {\n  if (option1 === option2) {\n    return true;\n  }\n\n  if (option1 === null || option2 === null) {\n    return false;\n  }\n\n  return optionComparer(option1, option2);\n}\n/**\n * Triggers change event handlers when reducer returns changed state.\n */\n\n\nfunction useStateChangeDetection(nextState, internalPreviousState, propsRef, hasDispatchedActionRef) {\n  React.useEffect(() => {\n    if (!propsRef.current || !hasDispatchedActionRef.current) {\n      // Detect changes only if an action has been dispatched.\n      return;\n    }\n\n    hasDispatchedActionRef.current = false;\n    const previousState = getControlledState(internalPreviousState, propsRef.current);\n    const {\n      multiple,\n      optionComparer\n    } = propsRef.current;\n\n    if (multiple) {\n      var _previousState$select;\n\n      const previousSelectedValues = (_previousState$select = previousState == null ? void 0 : previousState.selectedValue) != null ? _previousState$select : [];\n      const nextSelectedValues = nextState.selectedValue;\n      const onChange = propsRef.current.onChange;\n\n      if (!areArraysEqual(nextSelectedValues, previousSelectedValues, optionComparer)) {\n        onChange == null ? void 0 : onChange(nextSelectedValues);\n      }\n    } else {\n      const previousSelectedValue = previousState == null ? void 0 : previousState.selectedValue;\n      const nextSelectedValue = nextState.selectedValue;\n      const onChange = propsRef.current.onChange;\n\n      if (!areOptionsEqual(nextSelectedValue, previousSelectedValue, optionComparer)) {\n        onChange == null ? void 0 : onChange(nextSelectedValue);\n      }\n    }\n  }, [nextState.selectedValue, internalPreviousState, propsRef, hasDispatchedActionRef]);\n  React.useEffect(() => {\n    if (!propsRef.current) {\n      return;\n    } // Fires the highlightChange event when reducer returns changed `highlightedValue`.\n\n\n    if (!areOptionsEqual(internalPreviousState.highlightedValue, nextState.highlightedValue, propsRef.current.optionComparer)) {\n      var _propsRef$current, _propsRef$current$onH;\n\n      (_propsRef$current = propsRef.current) == null ? void 0 : (_propsRef$current$onH = _propsRef$current.onHighlightChange) == null ? void 0 : _propsRef$current$onH.call(_propsRef$current, nextState.highlightedValue);\n    }\n  }, [nextState.highlightedValue, internalPreviousState.highlightedValue, propsRef]);\n}\n\nexport default function useControllableReducer(internalReducer, externalReducer, props) {\n  var _ref;\n\n  const {\n    value,\n    defaultValue\n  } = props;\n  const propsRef = React.useRef(props);\n  propsRef.current = props;\n  const hasDispatchedActionRef = React.useRef(false);\n  const initialSelectedValue = (_ref = value === undefined ? defaultValue : value) != null ? _ref : props.multiple ? [] : null;\n  const initalState = {\n    highlightedValue: null,\n    selectedValue: initialSelectedValue\n  };\n  const combinedReducer = React.useCallback((state, action) => {\n    hasDispatchedActionRef.current = true;\n\n    if (externalReducer) {\n      return externalReducer(getControlledState(state, propsRef.current), action);\n    }\n\n    return internalReducer(getControlledState(state, propsRef.current), action);\n  }, [externalReducer, internalReducer, propsRef]);\n  const [nextState, dispatch] = React.useReducer(combinedReducer, initalState);\n  const previousState = React.useRef(initalState);\n  React.useEffect(() => {\n    previousState.current = nextState;\n  }, [previousState, nextState]);\n  useStateChangeDetection(nextState, previousState.current, propsRef, hasDispatchedActionRef);\n  return [getControlledState(nextState, propsRef.current), dispatch];\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}